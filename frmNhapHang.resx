<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXoa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAA5VJREFUSEuVVU9IlEEU/4iI6BSV+81IWkSH2Gs582kHoUN0kg4eJKKTdBKRiIgI
        DxIdPIREePAgEREhHcJDhHTsFCKe9iAREhEiIssiEst+M/3eezOr37pu+WD4dmfevN/783tvkk7ir+te
        l5VGvdULLtOV3KZbzqptl6k1rI/YG3PZ+ctB/f/F93Wp3KpXzuhNb5X3mfYAwTf8jgtnBOht+hrrYrje
        WWD0Zm71D3jIRvCtw8gXAD53Vo/jfAKeP8tN+ik3ajeC5Zn+7Ww6Esy0Fxi6i4u7MORhsIb/027gbHc4
        PiD+qj7njJrMM04dRfMH60E4Looz6Q0Y3hFvKMep8UlyLBx3FICUYXhFItZ111e6E45EJOf6O3kuBew6
        cuEoUgAsU2pzozcKxcfmDJCRFl1zppSFbeynBvtTfjA5HrYKAs+HEflYjNT36ytg2iY7atU7UQIyjGwQ
        S3BhJiqLcfUTew0U86UfvHCSL0BIB8ZuU0pRWM773j39hBlnVZUAyft7bNzqxn6qIZrpJkOsasAIQCQS
        Z7uHsF8lTyXvaSU6gO9p3OVaYv9RAuPgMIf0lRSi+HL5BCg5S6njRTqZmiMq4rsT90CIVbCpN1xjgeEP
        sIdaqCV4o78xmtUvwnlTcPEUDM2SMulQo+E3uI//REsyfq10Kag3BWl9yLpG/aLGWhcA9TScF4QigSfz
        AiBe0xd7azRKglpB4NRo0K0JgKSoLQAJcj5CXUvGmwA0Hg5jF80vcaKW4MdyuHAwRWCGs6UheISiUZr2
        UiV3iuyKElOEc6Qo028ELS0UmYSMQ6kqRtmjNei9ZQApYgNFnmmNBCxaIH3UCEUGTSlsdF+BpvBiGMbB
        c0kLUrhKOWd2ceHjvm6ANXMRhGlqdI0BDGjqBnqk0cTDfY2GqYnhxaG2sIXZBQpLZJyKzwTMZzZ9zMZp
        WGJG8QXKPwPsGxXcrVAGUKWV5yTSJ2qe0oC5c4b30LkAllFh1PvobOL60xIOeNjJJJVhxyBtihiFQJqe
        08A0aoVtGMyj1pcOAHhoUn5A4NWRxjV57rMUbKTmw7jGuxKOiiIFR6cKQ/DgaDw4PZ0fHPQPiippEePt
        H5woALmFWqzTBWpA/K4jbUsIewpR0nM5gfxOorCLcEIiJuP0BvTp4kNzmIQRTjNoizlfWHuNRl8Ab3NX
        t5lJ/xTqC0RxH2sBHlYAuE0GuUZGLcLz8c6vX5L8BQJPtTdbgZhmAAAAAElFTkSuQmCC
</value>
  </data>
</root>